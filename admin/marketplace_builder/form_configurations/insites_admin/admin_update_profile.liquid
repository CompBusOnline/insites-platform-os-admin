---
name: admin_update_profile
resource: User
resource_owner: anyone
redirect_to: #
configuration:
  email:
    property_options:
      readonly: true
  name:
  password:
  first_name:
  last_name:
  profiles:
    administrator:
      properties:
        company:
    contact_number:
      properties:
        work_phone_country_code:
        work_phone_area_code:
        work_phone_number:
authorization_policies:
  - only_allowed_by_administrators
---
{% query_graph 'current_user', result_name: 'g' %}
<pre id="formConfig" style="display:none">
  {{ form_builder | json}}
</pre>
<div class="grid-container-full">

  <div class="grid-x grid-padding-x">
    
    <div class="large-12 cell" style="max-width: 800px;">
      <div class="grid-x grid-padding-x">
        <div class="large-6 medium-6 small-12 cell">
    
          <form id="userFormDetailsId"
            name="userFormDetails"
            action="{{ form_builder.action }}"
            method="PATCH"
            novalidate
            data-abide data-live-validate="true"
            onsubmit="event.preventDefault(); checkForm(this)">
    
            <ins-card steady>
              <div class="grid-x grid-padding-x min-height">
                <div class="large-12 cell">
                  <label class="form-label" for="userFirstNameField">First Name
                    <span class="red">*</span>
                    <input type="text" id="userFirstNameField" name="userFirstNameField" autocomplete="off" required
                      value="{{ g.current_user.first_name }}" onkeypress="checkKey" />
    
                    <span class="form-error">
                     First Name is required.
                    </span>
                  </label>
                </div>

                <div class="large-12 cell">
                  <label class="form-label" for="userLastNameField">Last Name
                    <span class="red">*</span>
                    <input type="text" id="userLastNameField" name="userLastNameField" autocomplete="off" required
                      value="{{ g.current_user.last_name }}" onkeypress="checkKey" />
    
                    <span class="form-error">
                      Last Name is required.
                    </span>
                  </label>
                </div>
    
                <div class="large-12 cell">
                  <label class="form-label" for="userEmailField">Email
                    <span class="red">*</span>
                    <input type="email" id="userEmailField" name="userEmailField" autocomplete="off"
                      required value="{{ g.current_user.email }}" readonly />
    
                    <span class="form-error">
                      Email is required.
                    </span>
                  </label>
                </div>
    
                <div class="large-12 cell phone-content">
                  <ins-input-tel label="Phone" areacode-value="{{ g.current_user.contact_number.work_area_code }}" area-code="userDataAreaCode" phonenum-value="{{ g.current_user.contact_number.work_phone_number }}" phone-number="userDataPhoneNumber"></ins-input-tel>
                </div>
    
                <div class="large-12 cell">
                  <label class="form-label" for="userCompanyField">Company
                    <input type="text" id="userCompanyField" name="userCompanyField" autocomplete="off"
                      value="{{ g.current_user.administrator.company_name }}" />
                  </label>
                </div>
    
              </div>
            </ins-card>
    
            <div class="grid-container-full">
              <div class="grid-x">
                <div class="large-12 text-right cell submit-btn-wrap inline">
                  <button type="submit" id="submitButtonDetails" name="UPDATE" class="ripple-effects margin-top-20">
                    UPDATE DETAILS
                  </button>
                </div>
              </div>
            </div>
    
          </form>
        </div>
    
        <div class="large-6 medium-6 small-12 cell">
          <form 
            id="userFormPasswordId"
            name="userFormPassword"
            action="{{ form_builder.action }}"
            method="PATCH"
            novalidate
            data-abide data-live-validate="true"
            onsubmit="event.preventDefault(); checkForm(this)">
    
            <ins-card steady>
              <div class="grid-x grid-padding-x">
    
                <div class="large-12 cell">
                  <label class="form-label" for="userPasswordField">New Password
                    <span class="red">*</span>
                    <input type="password" id="userPasswordField" name="userPasswordField" autocomplete="off" required />
    
                    <span class="form-error">
                      Password is required.
                    </span>
                  </label>
                </div>
    
                <div class="large-12 cell">
                  <label class="form-label" for="userConfirmPasswordField">Confirm Password
                    <span class="red">*</span>
                    <input type="password" id="userConfirmPasswordField" name="userConfirmPasswordField" autocomplete="off" data-equalto="userPasswordField" />
    
                    <span class="form-error">
                      Password does not match.
                    </span>
                  </label>
                </div>
              </div>
            </ins-card>
    
            <div class="grid-container-full">
              <div class="grid-x">
                <div class="large-12 text-right cell submit-btn-wrap inline">
                    <button type="submit" id="submitButtonPassword" name="UPDATE" class="ripple-effects margin-top-20">
                    UPDATE PASSWORD
                  </button>
                </div>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
 
  var formConfig = JSON.parse(document.getElementById('formConfig').innerHTML);
  var headers = {
    "X-CSRF-Token": formConfig.system_fields.authenticity_token,
    "X-Requested-With": "XMLHttpRequest",
    "Content-Type": "application/json"
  }

  function checkKey(event) {
    var regex = new RegExp("^[a-zA-Z ]+$");
    var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
    if (!regex.test(key)) {
      event.preventDefault();
      return false;
    }
  }

  function enableSubmitButtons(){
    $("#submitButtonDetails").attr("disabled", false);
    $("#submitButtonPassword").attr("disabled", false);
  }

  function disableSubmitButtons(){
    $("#submitButtonDetails").attr("disabled", true);
    $("#submitButtonPassword").attr("disabled", true);
  }

  function successHandler(message) {
    enableSubmitButtons();
    let ops = {
      closeHtml: '<button><i class="icon-close-1"></i></button>',
      closeButton: true,
      timeOut: 0,
      extendedTimeOut: 0
    }
    
    parent.toastIt('success','Your ' + message + ' has been updated.', ops);
  }

  function errorHandler(message) {
    enableSubmitButtons();
    swal('', 'Failed to update ' + message + '. Please try again.', 'error');
  }

  function submitForm(formModel, message) {
    var options = {
      headers: headers,
      method: 'PATCH',
      data: JSON.stringify(formModel),
      success: function(data){ successHandler(message) },
      error: function(error){ errorHandler(message) }
    };
    $.ajax(formConfig.action, options);
  }

  function bindValues() {
    var formModel = {
      form_configuration_name: 'admin_update_profile',
      form: {
        email: $('#userEmailField').val(),
        first_name: $('#userFirstNameField').val(),
        last_name: $('#userLastNameField').val(),
        name: $('#userFirstNameField').val() + " " + $('#userLastNameField').val(),
        profiles_attributes: {
          administrator_attributes: {
            properties_attributes: {
              company: $('#userCompanyField').val(),
            }
          },
          contact_number_attributes: {
            properties_attributes: {
              work_phone_country_code: $(".phone").intlTelInput("getSelectedCountryData").dialCode,
              work_phone_area_code: document.getElementsByName("userDataAreaCode")[0].value,
              work_phone_phone_number: document.getElementsByName("userDataPhoneNumber")[0].value
            }
          }
        }
      }
    }
    submitForm(formModel, 'profile');
  }

  function bindValuesPassword() {
    var formModel = {
      form_configuration_name: 'admin_update_profile',
      form: {
        password: $('#userPasswordField').val(),
      }
    }
    submitForm(formModel, 'password');
  }

  function checkForm(form) {
    setTimeout(function() {
      if (!$("#" + form.id + " .form-label").hasClass("is-invalid-label")) {
        disableSubmitButtons();
        if (form.id === 'userFormPasswordId'){
          bindValuesPassword();
        } else {
          bindValues();
        }
      }
    });
  }

  $(function(){
    var $input = $('input');
    $input.on('focus', function(){
      $(this).closest('label').addClass('active');
    }).on('blur', function(){
      $(this).closest('label').removeClass('active');
    });
  });

  // $(function () {
  //   $('#myProfile').on('click', function(){
  //     // var isOverview = $(this).attr('id') ? 'overview' : '';
  //     // console.log(isOverview);
  //     // if (isOverview){
  //     //   $('#app').removeClass('hide-slot');
  //     // } else {
  //     //   $('#app').addClass('hide-slot');
  //     // }

  //     console.log('test');
  //   });
  // });
</script>